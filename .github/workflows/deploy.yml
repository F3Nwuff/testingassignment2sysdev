name: Section C - Task 7

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: [self-hosted]

    env:
      AWS_REGION: us-east-1

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Fix line endings (safety)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y dos2unix
          dos2unix scripts/*.sh || true
          chmod +x scripts/deploy.sh

      - name: Install toolchain
        run: |
          set -euxo pipefail

          # Base packages
          sudo apt-get update -y
          sudo apt-get install -y jq unzip curl gnupg python3-pip

          # Ansible (apt avoids pip's "externally-managed-environment" error)
          sudo apt-get install -y ansible

          # AWS CLI v2
          curl -sSL "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o awscliv2.zip
          unzip -o awscliv2.zip
          sudo ./aws/install --update
          aws --version || true

          # ---- Create a 'default' profile using the instance role (IMDSv2) ----
          mkdir -p ~/.aws
          TOKEN=$(curl -sS -X PUT "http://169.254.169.254/latest/api/token" \
                   -H "X-aws-ec2-metadata-token-ttl-seconds: 21600")
          ROLE=$(curl -sS -H "X-aws-ec2-metadata-token: $TOKEN" \
                   http://169.254.169.254/latest/meta-data/iam/security-credentials/)
          CREDS=$(curl -sS -H "X-aws-ec2-metadata-token: $TOKEN" \
                   http://169.254.169.254/latest/meta-data/iam/security-credentials/$ROLE)

          # Write short-lived credentials as the 'default' profile
          jq -r --arg region "${AWS_REGION:-us-east-1}" '
            "[default]",
            "aws_access_key_id=\(.AccessKeyId)",
            "aws_secret_access_key=\(.SecretAccessKey)",
            "aws_session_token=\(.Token)"
          ' <<<"$CREDS" > ~/.aws/credentials

          printf "[default]\nregion = %s\n" "${AWS_REGION:-us-east-1}" > ~/.aws/config
          # ---------------------------------------------------------------------

          # Terraform
          if ! command -v terraform >/dev/null 2>&1; then
            curl -fsSL https://apt.releases.hashicorp.com/gpg \
              | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
            echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com \
              $(. /etc/os-release; echo $UBUNTU_CODENAME) main" \
              | sudo tee /etc/apt/sources.list.d/hashicorp.list
            sudo apt-get update -y
            sudo apt-get install -y terraform
          fi
          terraform -version

          # Sanity check (will succeed now that 'default' exists)
          aws sts get-caller-identity --profile default

      - name: Run deploy (debug)
        env:
          TF_LOG: WARN
          TF_INPUT: "0"
        run: |
          set -euxo pipefail
          bash -x ./scripts/deploy.sh
